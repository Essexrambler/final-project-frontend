{"version":3,"sources":["js/app.js","js/models/adopt.js","js/controllers/adopts.js","js/models/animal.js","js/controllers/animals.js","js/controllers/auth.js","js/controllers/main.js","js/router.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","Adopt","$resource","id","update","method","AdoptsIndexController","adoptsIndex","this","all","query","AdoptsShowController","$state","deleteAdopt","adoptsShow","adopt","$remove","go","get","params","delete","AdoptsEditController","adoptsEdit","$update","Animal","AnimalsIndexController","animalsIndex","AnimalsShowController","deleteAnimal","animalsShow","animal","AnimalsEditController","animalsEdit","RegisterController","$auth","submit","signup","register","user","then","LoginController","login","credentials","MainController","$rootScope","logout","main","message","secureState","e","toState","console","log","isAuthenticated","protectedStates","includes","name","preventDefault","isLoggedIn","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","User","UsersIndexController","usersIndex","UsersShowController","deleteUser","usersShow","UsersEditController","usersEdit","angular","module","constant","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .factory('Adopt', Adopt);\n\nAdopt.$inject = ['$resource', 'API_URL'];\nfunction Adopt($resource, API_URL) {\n  return new $resource(`${API_URL}/adopts/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('AdoptsIndexController', AdoptsIndexController)\n  .controller('AdoptsShowController', AdoptsShowController)\n  .controller('AdoptsEditController', AdoptsEditController);\n\n\nAdoptsIndexController.$inject = ['Adopt'];\nfunction AdoptsIndexController(Adopt) {\n  const adoptsIndex = this;\n\n  adoptsIndex.all = Adopt.query();\n}\n\nAdoptsShowController.$inject = ['Adopt', '$state'];\nfunction AdoptsShowController(Adopt, $state) {\n  const adoptsShow = this;\n\n\n  adoptsShow.adopt = Adopt.get($state.params);\n\n  function deleteAdopt() {\n    adoptsShow.adopt.$remove(() => {\n      $state.go('adoptsIndex');\n    });\n  }\n\n  adoptsShow.delete = deleteAdopt;\n}\n\nAdoptsEditController.$inject = ['Adopt', '$state'];\nfunction AdoptsEditController(Adopt, $state) {\n  const adoptsEdit = this;\n\n  adoptsEdit.adopt = Adopt.get($state.params);\n\n  function update() {\n    adoptsEdit.adopt.$update(() => {\n      $state.go('adoptsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .factory('Animal', Animal);\n\nAnimal.$inject = ['$resource', 'API_URL'];\nfunction Animal($resource, API_URL) {\n  return new $resource(`${API_URL}/animals/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('AnimalsIndexController', AnimalsIndexController)\n  .controller('AnimalsShowController', AnimalsShowController)\n  .controller('AnimalsEditController', AnimalsEditController);\n\n\nAnimalsIndexController.$inject = ['Animal'];\nfunction AnimalsIndexController(Animal) {\n  const animalsIndex = this;\n\n  animalsIndex.all = Animal.query();\n}\n\nAnimalsShowController.$inject = ['Animal', '$state'];\nfunction AnimalsShowController(Animal, $state) {\n  const animalsShow = this;\n\n\n  animalsShow.animal = Animal.get($state.params);\n\n  function deleteAnimal() {\n    animalsShow.animal.$remove(() => {\n      $state.go('animalsIndex');\n    });\n  }\n\n  animalsShow.delete = deleteAnimal;\n}\n\nAnimalsEditController.$inject = ['Animal', '$state'];\nfunction AnimalsEditController(Animal, $state) {\n  const animalsEdit = this;\n\n  animalsEdit.animal = Animal.get($state.params);\n\n  function update() {\n    animalsEdit.animal.$update(() => {\n      $state.go('animalsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main =this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('usersIndex');\n        main.message = 'You must be logged in to go there!';\n      });\n  }\n\n  const protectedStates = ['usersEdit', 'usersNew'];\n\n  function secureState(e, toState) {\n    main.message = null;\n    console.log(toState);\n    // e.prevetDefault();\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)){\n      e.preventDefault();\n      main.message = 'You must be logged in to go there!';\n      $state.go('login');\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n  .state('usersIndex', {\n    url: '/users',\n    templateUrl: '/templates/usersIndex.html',\n    controller: 'UsersIndexController as usersIndex'\n  })\n  .state('usersNew', {\n    url: '/users/new',\n    templateUrl: '/templates/usersNew.html',\n    controller: 'UsersNewController as usersNew'\n  })\n  .state('usersShow', {\n    url: '/users/:id',\n    templateUrl: '/templates/usersShow.html',\n    controller: 'UsersShowController as usersShow'\n  })\n  .state('usersEdit', {\n    url: '/users/:id/edit',\n    templateUrl: '/templates/usersEdit.html',\n    controller: 'UsersEditController as usersEdit'\n  })\n  .state('register', {\n    url: '/register',\n    templateUrl: '/templates/register.html',\n    controller: 'RegisterController as register'\n  })\n  .state('login', {\n    url: '/login',\n    templateUrl: '/templates/login.html',\n    controller: 'LoginController as login'\n  })\n  .state('animalsIndex', {\n    url: '/animals',\n    templateUrl: '/templates/animalsIndex.html',\n    controller: 'AnimalsIndexController as animalsIndex'\n  })\n  .state('animalsShow', {\n    url: '/animals/:id',\n    templateUrl: '/templates/animalsShow.html',\n    controller: 'AnimalsShowController as animalsShow'\n  })\n  .state('animalsEdit', {\n    url: '/animals/:id/edit',\n    templateUrl: '/templates/animalsEdit.html',\n    controller: 'AnimalsEditController as animalsEdit'\n  })\n  .state('adoptsIndex', {\n    url: '/adopts/:id/index',\n    templateUrl: '/templates/adoptsIndex.html',\n    controller: 'AdoptsIndexController as adoptsIndex'\n  })\n  .state('adoptsShow', {\n    url: '/adopts/:id/show',\n    templateUrl: '/templates/adoptsShow.html',\n    controller: 'AdoptsShowController as adoptsShow'\n  })\n  .state('adoptsEdit', {\n    url: '/adopts/:id/edit',\n    templateUrl: '/templates/adoptsEdit.html',\n    controller: 'AdoptsEditController as adoptsEdit'\n  });\n\n\n\n  $urlRouterProvider.otherwise('/animals/');\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n  \n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User', '$state'];\nfunction UsersShowController(User, $state) {\n  const usersShow = this;\n\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.delete = deleteUser;\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n"]}